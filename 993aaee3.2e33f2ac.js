(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{166:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(2),o=n(6),a=(n(0),n(237)),i={id:"lesson",title:"Node - 3",sidebar_label:"Lesson"},l={unversionedId:"node/week-3/lesson",id:"node/week-3/lesson",isDocsHomePage:!1,title:"Node - 3",description:"Learning Objectives",source:"@site/docs/node/week-3/lesson.md",slug:"/node/week-3/lesson",permalink:"/node/week-3/lesson",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/node/week-3/lesson.md",version:"current",sidebar_label:"Lesson",sidebar:"Node",previous:{title:"Instructor Notes",permalink:"/node/week-2/instructors"},next:{title:"Homework",permalink:"/node/week-3/homework"}},c=[{value:"Learning Objectives",id:"learning-objectives",children:[]},{value:"CRUD Review",id:"crud-review",children:[{value:"Using Update exercise",id:"using-update-exercise",children:[]}]},{value:"Heroku",id:"heroku",children:[]},{value:"City Guide and Paired Programming",id:"city-guide-and-paired-programming",children:[{value:"Rules",id:"rules",children:[]}]}],u={rightToc:c};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(a.b)("p",null,"By the end of this lesson students should be able to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Process an PUT request using Express and Node to update data in memory"),Object(a.b)("li",{parentName:"ul"},"Upload their node app to the internet so it can be accessed anywhere using Heroku")),Object(a.b)("hr",null),Object(a.b)("h2",{id:"crud-review"},"CRUD Review"),Object(a.b)("p",null,"So what will we build? we will build a ",Object(a.b)("strong",{parentName:"p"},"CRUD")," API. CRUD stands for Create, Retrieve, Update, Delete. If you think about it, this is what most applications do:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},'Create some "resources"'),Object(a.b)("li",{parentName:"ul"},"Retrieve them (GET them)"),Object(a.b)("li",{parentName:"ul"},"Update them"),Object(a.b)("li",{parentName:"ul"},"Delete them")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Which of these have we learnt so far?")),Object(a.b)("h3",{id:"using-update-exercise"},"Using Update exercise"),Object(a.b)("p",null,"This is an Teacher led exercise which can be used to show how we might retrieve an element by ID using a GET request."),Object(a.b)("h4",{id:"objective"},"Objective"),Object(a.b)("p",null,"Change a quote API server to allow updating a quote according to the given ID."),Object(a.b)("p",null,"The route should use the HTTP method PUT and should use the URL:"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"/quotes")),Object(a.b)("p",null,"You should use the starting project: ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://glitch.com/~cyf-quotes-id-start"}),"cyf-quotes-id-start"),". This is because this project has quotes with IDs."),Object(a.b)("p",null,"When you remix the starting project, immediately rename it as your own."),Object(a.b)("h4",{id:"updating-data"},"Updating Data"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Complete in-class (1) Using Update exercise at this point")),Object(a.b)("p",null,"Lets look back at our original objectives."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("inlineCode",{parentName:"p"},"PUT /albums/:albumId")," should update the album (that matches the passed albumId)")),Object(a.b)("p",null,"This means that ",Object(a.b)("inlineCode",{parentName:"p"},"PUT /albums/2")," should update an album with the id ",Object(a.b)("inlineCode",{parentName:"p"},"2")," and return ",Object(a.b)("inlineCode",{parentName:"p"},"200")," with JSON ",Object(a.b)("inlineCode",{parentName:"p"},"{ success: true }")," to the user."),Object(a.b)("p",null,"The code will look like this"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),'// notice .put\napp.put("/albums/:albumID", function (req, res) {\n  console.log("PUT /albums route");\n});\n')),Object(a.b)("p",null,"Remember, you have got to ",Object(a.b)("strong",{parentName:"p"},"update")," the album, not add it to the list"),Object(a.b)("h2",{id:"heroku"},"Heroku"),Object(a.b)("p",null,"We use can use Heroku to host our APIs online (similar in the way you might have used Netlify in the past)."),Object(a.b)("p",null,"This can be a little tricky however the documentation is good."),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://devcenter.heroku.com/articles/getting-started-with-nodejs"}),"https://devcenter.heroku.com/articles/getting-started-with-nodejs")),Object(a.b)("p",null,"Work in pairs and with Teaching Assistants to get your homework from the previous two weeks working online."),Object(a.b)("p",null,"You should complete all of the following sections:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Introduction"),Object(a.b)("li",{parentName:"ul"},"Set up"),Object(a.b)("li",{parentName:"ul"},"Deploy the app"),Object(a.b)("li",{parentName:"ul"},"View logs"),Object(a.b)("li",{parentName:"ul"},"Define a Procfile"),Object(a.b)("li",{parentName:"ul"},"Run the app locally")),Object(a.b)("p",null,"Now when you use"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"git push heroku master\n")),Object(a.b)("p",null,"After making a ",Object(a.b)("inlineCode",{parentName:"p"},"commit")," your updated website with my made available online."),Object(a.b)("h2",{id:"city-guide-and-paired-programming"},"City Guide and Paired Programming"),Object(a.b)("p",null,"In this exercises you should split into groups of two people."),Object(a.b)("p",null,"You can find the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/CodeYourFuture/cyf-node-challenges/tree/master/challenge-london-mini-guide"}),"challenge")," here."),Object(a.b)("h3",{id:"rules"},"Rules"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"One of you will be leading on building the React (Server) application"),Object(a.b)("li",{parentName:"ol"},"One of you will be leading on building the Node.js (Client) Application"),Object(a.b)("li",{parentName:"ol"},"It is ",Object(a.b)("strong",{parentName:"li"},"very important")," that you do not move onto the next level of the challenge until ",Object(a.b)("strong",{parentName:"li"},"both")," of you have completed the level.",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"e.g. Both of you have to finish Level 100 before continuing onto Level 200."),Object(a.b)("li",{parentName:"ul"},"If one of you gets stuck - help each other!")))))}b.isMDXComponent=!0},237:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return h}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),b=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=b(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=b(n),d=r,h=s["".concat(i,".").concat(d)]||s[d]||p[d]||a;return n?o.a.createElement(h,l(l({ref:t},u),{},{components:n})):o.a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);